{
  "timestamp": "20250916_175905",
  "run_date": "2025-09-16T17:59:05.970992",
  "config": {
    "environment": "development",
    "max_stories": 20,
    "tts_voice": "en-US-Neural2-D"
  },
  "stories": [
    {
      "id": 45262835,
      "title": "Things you can do with a Software Defined Radio (2024)",
      "url": "https://blinry.org/50-things-with-sdr/",
      "score": 655,
      "by": "mihau",
      "time": 1758033319,
      "descendants": 116,
      "type": "story",
      "created_at": "2025-09-16T04:35:19"
    },
    {
      "id": 45270108,
      "title": "Apple releases iOS 15.8.5 security update for 10-year old iPhone 6s",
      "url": "https://support.apple.com/en-us/125142",
      "score": 221,
      "by": "jerlam",
      "time": 1758069242,
      "descendants": 61,
      "type": "story",
      "created_at": "2025-09-16T14:34:02"
    },
    {
      "id": 45266039,
      "title": "How to make the Framework Desktop run even quieter",
      "url": "https://noctua.at/en/how-to-make-the-framework-desktop-run-even-quieter",
      "score": 216,
      "by": "lwhsiao",
      "time": 1758047601,
      "descendants": 66,
      "type": "story",
      "created_at": "2025-09-16T08:33:21"
    },
    {
      "id": 45270482,
      "title": "Irssi: IRC Client in a Docker Image",
      "url": "https://hub.docker.com/_/irssi",
      "score": 18,
      "by": "razodactyl",
      "time": 1758072401,
      "descendants": 19,
      "type": "story",
      "created_at": "2025-09-16T15:26:41"
    },
    {
      "id": 45265745,
      "title": "Denmark close to wiping out cancer-causing HPV strains after vaccine roll-out",
      "url": "https://www.gavi.org/vaccineswork/denmark-close-wiping-out-leading-cancer-causing-hpv-strains-after-vaccine-roll-out",
      "score": 576,
      "by": "slu",
      "time": 1758046349,
      "descendants": 229,
      "type": "story",
      "created_at": "2025-09-16T08:12:29"
    },
    {
      "id": 45268269,
      "title": "Doom crash after 2.5 years of real-world runtime confirmed on real hardware",
      "url": "https://lenowo.org/viewtopic.php?t=31",
      "score": 105,
      "by": "minki_the_avali",
      "time": 1758057863,
      "descendants": 39,
      "type": "story",
      "created_at": "2025-09-16T11:24:23"
    },
    {
      "id": 45248558,
      "title": "A dumb introduction to z3",
      "url": "https://asibahi.github.io/thoughts/a-gentle-introduction-to-z3/",
      "score": 140,
      "by": "kfl",
      "time": 1757936805,
      "descendants": 14,
      "type": "story",
      "created_at": "2025-09-15T01:46:45"
    },
    {
      "id": 45232940,
      "title": "CubeSats are fascinating learning tools for space",
      "url": "https://www.jeffgeerling.com/blog/2025/cubesats-are-fascinating-learning-tools-space",
      "score": 24,
      "by": "calcifer",
      "time": 1757777865,
      "descendants": 1,
      "type": "story",
      "created_at": "2025-09-13T05:37:45"
    },
    {
      "id": 45270676,
      "title": "Slow Social Media",
      "url": "https://herman.bearblog.dev/slow-social-media/",
      "score": 16,
      "by": "rishikeshs",
      "time": 1758074278,
      "descendants": 8,
      "type": "story",
      "created_at": "2025-09-16T15:57:58"
    },
    {
      "id": 45260741,
      "title": "Shai-Hulud malware attack: Tinycolor and over 40 NPM packages compromised",
      "url": "https://www.stepsecurity.io/blog/ctrl-tinycolor-and-40-npm-packages-compromised",
      "score": 935,
      "by": "jamesberthoty",
      "time": 1758021723,
      "descendants": 728,
      "type": "story",
      "created_at": "2025-09-16T01:22:03"
    }
  ],
  "scraped_content": [
    {
      "url": "https://blinry.org/50-things-with-sdr/",
      "title": "Things you can do with a Software Defined Radio (2024)",
      "content": "Fifty Things you can do with a Software Defined Radio üìª\n\nLast week, I went on an adventure through the electromagnetic spectrum!\n\nIt‚Äôs like an invisible world that always surrounds us, and allows us to do many amazing things: It‚Äôs how radio and TV are transmitted, it‚Äôs how we communicate using Wi-Fi or our phones. And there are many more things to discover there, from all over the world.\n\nIn this post, I‚Äôll show you fifty things you can find there ‚Äì all you need is this simple USB dongle and an antenna kit!\n\nA couple of years ago, I heard about the ‚ÄúMake 50 of Something‚Äù technique in Vi Hart‚Äôs Fifty Fizzbuzzes. Since then, I‚Äôve already made fifty programs for the fantasy console TIC-80 in one weekend in 2021.\n\nI found that a very exciting experience ‚Äì trying to make so many new things really pushed me to leave my comfort zone, to be creative, and not to get sucked into rabbit holes too deep.\n\nI knew I definitely wanted to try the technique again. So, when I took a week of vacation, I decided to try to find 50 things to do with a Software Defined Radio!\n\nWhat is an SDR?\n\nA Software Defined Radio is essentially a radio that relies on a computer to do most of its data processing. It doesn‚Äôt rely on analog hardware too much ‚Äì instead, most of what is does is ‚Äúdefined in software‚Äù, hence the name.\n\nUsually, SDRs can detect electromagnetic waves in a much wider range than a common FM radio, which makes it especially exciting! I got interested in SDRs after reading about Albert‚Äôs project to build one as a module for the Framework laptop!\n\nI went into this week without much knowledge of the things I‚Äôd find. I‚Äôd read through a introductory course for aspiring amateur radio operators (more on that later), but I barely knew which way to point my antenna.\n\nIf you want to follow along, this section is intended to help you get started!\n\nMost of the 50 things also have a little infobox at the beginning, explaining the frequencies, and some special knowledge needed to receive them.\n\nI looked into the topic a bit, and a popular, cheap SDR right now is the RTL-SDR Blog V4, which has the form factor of a simple SUB dongle. You can get it for around $30, or as a kit with telescopic antennas for $50.\n\nEverything I tried during this week was done using this USB dongle, the antenna kit, and a long piece of wire!\n\nI tried to adjust my antenna to the desired frequencies as best as I could. I think for receiving, it‚Äôs not super important that your antenna is perfectly configured, though.\n\nFor most applications, I used the dipole antennas that came with the kit I purchased. Dipole antennas have two sides that stick out the same length. You generally wanna make the whole antenna half as long as the wave length you want to receive, and orient it vertically.\n\nMy rule of thumb was to divide 72 by the frequency in MHz, and take that as the length of each side of the dipole in meters. That‚Äôd make the whole antenna a bit shorter than half of the wavelength.\n\nFor example, this is what the configuration looked like for frequencies around 100 MHz:\n\nAnd for higher frequencies, I used the tiny screw-on antennas from the kit:\n\nFor specific applications like receiving satellites, or receiving locators for airplanes, I used special configurations, but I‚Äôll discuss these as we go!\n\nThe software I liked best, and which I used for many things, was SDR++. It allows you to explore the frequency spectrum very smoothly, and has a modern user interface!\n\nBut I also used plenty of other software, on Linux in my case. I‚Äôll link to the software as needed below.\n\nOn Monday morning, I was excited to start this project! I sat down at my desk, and got to work!\n\nThis as an obvious first thing to do, as the signals are very strong! I was using the SDR++ software, and it felt very nice browsing around and discovering the stations around me! It reminded me of exploring the radio as a child.\n\nI found a local station that gives 1-hour slots to civic groups, for example!\n\nThis is a special frequency range in Germany: Anyone is allowed to send there, using licensed devices. There are 6 channels.\n\nI think someone was testing their device there when I listened in. :D I heard a ‚ÄúHellooo?‚Äù, then a ‚ÄúTest, test‚Äù, and then a ‚ÄúGeneral call to all stations‚Äù. Oh, and shortly after a short transmission on channel 3 in a Slavic-sounding language!\n\nFreenet devices have a range of only a couple of kilometers, so these people must have been pretty close! :O\n\nWhile browsing the aviation frequencies, I found this station that reports weather conditions in an endless loop. It seems to be the ‚ÄúAutomatic Terminal Information Service‚Äù of Hamburg airport!\n\nThanks to that, I found out that the current air pressure was 1011 hPa! :D\n\nListening to ‚Äúmessages not meant for the general public‚Äù is not allowed in Germany, so of course I didn‚Äôt do that. And if I had accidentally done that, I wouldn‚Äôt be allowed to tell you about it. üôÖ\n\nThat‚Äôs short for ‚ÄúAutomatic Dependent Surveillance ‚Äì Broadcast‚Äù. Aircraft send it automatically to be tracked.\n\nFor this, I built my first antenna! From wire and and an antenna connector called ‚ÄúSMA‚Äù.\n\nAnd it worked! \\o/ I decoded the signal using the software SDRangel. Fascinating! I saw some big & small airplanes, and even a helicopter!\n\nHow stereo audio is transmitted is really interesting, because it‚Äôs backwards-compatible to receivers that don‚Äôt support it:\n\nHere, you see the demodulated audio frequency spectrum, as shown in SDRangel. Below 19k Hz, it‚Äôs just mono audio. Then, to mark a stereo station, there‚Äôs a constant ‚Äúpilot tone‚Äù at 19k Hz! (Outside of what most humans can hear.)\n\nThen, if you double the frequency of the pilot tone, you can derive the sections where the difference of the left & right channel to the mono channel is transmitted!\n\nCorrection: I‚Äôve been told that instead of what I call ‚Äúleft‚Äù and ‚Äúright‚Äù in this diagram, the upper frequencies transmit the difference of the left and right channels! That way, the receiver can calculate the left and right channels from the mono signal (which is, esseutially, the sum of left and right).\n\nIf you triple the frequency of the pilot tone, you get to a range where FM stations transmit small amounts of digital metadata, like the name and genre of the station, and the current song! That‚Äôs a protocol called Radio Data System.\n\nThis system can also transmit road traffic information! There seemed to be a road closure at ‚Äú0x64BE‚Äù, as decoded by SDRangel.\n\nThe Federal Highway Research Institute publishes an Excel table, where I could look up that this is a town in Lower Saxony!\n\n8: Listen to conversations on the 2-meter amateur radio band\n\nThis is a frequency range reserved for amateur radio operators ‚Äì for non-commercial use only. You may send on this band after getting a license.\n\nWhat I found here is seemingly a conversation circle facilitated by a relay around 15 km away from here ‚Äì it takes input on a certain frequency, and outputs an amplified copy of it on another frequency! Klaus, Bernd, J√ºrgen and Horst were talking about antennas, relays, and Windows XP! üòÅ\n\nThe SDRangel software also has a demodulator for Digital Audio Broadcast! :O I continue to be amazed by it!\n\nI think this was the first time I‚Äôve received digital radio via air! I saw so many stations, and I‚Äôve only checked a couple of channels.\n\nThe advantage of this digital channel is that there‚Äôs no noise. And I even saw a ‚Äúcover image‚Äù in one of the programs!\n\nThis is a frequency range for ‚ÄúPrivate Mobile Radio‚Äù. It‚Äôs another of these bands where anyone can transmit using a licensed device!\n\nNot a lot of activity here. I heard ‚ÄúHello, hellooo!‚Äù, ‚ÄúCan you hear me?‚Äù and some short transmissions that sounded like a child! :D\n\nThere also seemed to be digital transmissions, but I didn‚Äôt know how to decode them yet.\n\nThe range of PMR446 devices is pretty low (a couple of hundred metres in cities), so again, the people must‚Äôve been close!\n\nAfter the first day of SDR experiments, I was amazed how much invisible communication is going on around us in the electromagnetic spectrum at the same time!\n\nI posted each of these things on Mastodon as I went, and asked people for suggestions for more things I could receive.\n\nAt 433 MHz, there‚Äôs a frequency band for ‚Äúindustrial, scientific and medical‚Äù applications. And wow, there was quite a lot of activity nearby!\n\nUsing the decoder rtl_433, I saw two sensors that output the current temperature, humidity, and air pressure!\n\nThere were also some ‚ÄúIBIS beacons‚Äù flying by, which are used in public transportation, so maybe it‚Äôs buses driving by?\n\nLater, an ‚ÄúInterlogix Security‚Äù device also appeared, reporting ‚Äúclosed switch states‚Äù :O\n\nShips send out their status using AIS (Automatic Identification System). And again, I received a lot of them here in Hamburg! :O\n\nI was especially excited to receive data from the MS Stubnitz (a fisher boat that was turned into a culture center/techno club)! It reports its status as ‚Äúmoored‚Äù, and its speed as 0.1 knots! :D\n\nAgain, I used the software SDRangel. Apparently, it can also display a 3D map, but I haven‚Äôt figured out how to add 3D models‚Ä¶\n‚Ä¢ Frequency: 876-959 MHz, I looked up the specific ranges for Germany on Wikipedia\n\nI was curious whether you could tell if someone used their phone! So I borrowed a GSM phone, tuned to the correct frequencies, and made some test calls.\n\nWhat surprised me most: You can kind of ‚Äúsee‚Äù the volume at which I was talking!?\n\nIn the recording, the three dense bands at the end were when I was humming into the phone at the other end. This only worked in the ‚Äúreceiving‚Äù direction.\n\nI spent all Tuesday afternoon and evening learning about satellites. The program gpredict is really nice to find out when satellites will pass overhead! I learned a lot, including that one satellite I was trying to receive burned up last week! :D\n\nI was super excited when I first received a signal from a NOAA satellite! üõ∞Ô∏è\n\nBut I didn‚Äôt manage to decode it properly yet. Maybe my reception was too noisy? I wanted to keep trying, but I had to move on.\n\nIn Germany, the police has switched to an encrypted digital protocol called TETRA.\n\nEven though I‚Äôve seen some interesting talks at CCC events about weaknesses in the decryption, all I wanted to do for now is looking at the pretty signals in SDR++. :3\n\nAgain, this is communication not meant for the general public.\n\nI didn‚Äôt listen to someone dispatching taxis to specific addresses, and you also shouldn‚Äôt do that either. üöï\n\nSome of the most fun I had was just browsing frequencies and seeing what I can find! Sometimes, I encountered signals I can‚Äôt identify.\n\nFor example, at 865-868 MHz, there was a family of slow, continuous, digital signals that made a nice melody when listened to in single-sideband demodulation!\n\nAnd at 177-180 MHz, there were two very broadband transmissions. Might be TV? But I couldn‚Äôt find out what type. (It later turned out that I‚Äôd already listened to these signals ‚Äì it was digital radio, DAB+.)\n\nAs I was browsing around for things to receive, I saw on this tracking website that a radiosonde was just launched in Hamburg! SDRangel could decode its transmission! It had climbed to a height of 7 km, and it‚Äôs -17 ¬∞C there!\n\nI knew that it would eventually burst and fall back to Earth, and that I could try to get to it and find it!\n\nI decided to go on a field trip, using trains and my bike.\n\nI was following the tracker. The balloon popped earlier than predicted, and I frantically changed travel plans!\n\nEventually, it landed in a forest. I hoped I could get to it! What made this adventure more tricky was that my mobile Internet contract ran out while I was on the go, and my battery was also almost empty.\n\nBut I made it to the forest, and entered it.\n\nAs I circled the site, I encountered a person in their 60s, with a stubbly beard and a blue wool hat. He was looking in the direction of the crash site, and was holding a smartphone, so I asked him whether he also was looking for the radiosonde.\n\nHe was! We looked for it together for half an hour, jumping over small rivers and crawling through the woods, while he gave me a lot of tips related to hunting sondes.\n\nHe told me that he had found around 40 of them so far!\n\nUsually, the sondes keep broadcasting after landing, but this one wasn‚Äôt. So he quickly guessed that someone else could‚Äôve taken it. Or maybe it landed in the water and died?\n\nSome pictures of the area we searched:\n\nEventually, we gave up, and walked back to our vehicles. He also is an amateur radio operator, and could answer a couple of questions related to building antennas!\n\nAnd he was right: Someone had been faster than us! The status was changed. So in the end, I didn‚Äôt find the sonde. But something that might be even better ‚Äì a friend!\n\nIn the 2-meter amateur band, there are certain frequencies for the ‚ÄúAutomatic Packet Reporting System‚Äù. It‚Äôs a bit like IP ‚Äì packets have a ‚Äúfrom‚Äù and a ‚Äúto‚Äù. They can also broadcast their position, or weather data.\n\nSome stations seem to announce themselves as repeaters, which probably help forward the packets to increase the range.\n\nAnd two people seemed to be on a ‚Äúfieldday‚Äù, and broadcasted their location. :D\n\nI started the day by building an antenna!\n\nThis was going to be a simple ‚Äúrandom wire‚Äù antenna, to allow me to get better reception in the lower frequencies, which I‚Äôve omitted so far (because I knew it would be much more fun with a better antenna)!\n\nI measured out 21.6 m of wire (which for ‚ú®magic‚ú® reasons seem to be a good universal antenna length)‚Ä¶\n\n‚Ä¶directly attached it to the center of another SMA connector‚Ä¶\n\n‚Ä¶and draped it all around my room!\n\nPeople on the Internet say that there are many problems with this ‚Äì that it would be better to have it outside, and that there‚Äôs an impedance mismatch between the receiver and the wire.\n\nI could address those problems, but I wanna try how well this works first :)\n\nI‚Äôd been learning it a little bit, so if I recorded it and slowed it down, I could understand it: They‚Äôre sending their callsigns. These are from Belgium, France, and Italy! \\o/\n\nI compared to my 2-meter dipole antenna, and the reception was definitely better ‚Äì I can pick up more transmissions, and with much less noise!\n\nThe German Weather Service broadcasts maritime information throughout the day on various shortwave frequencies.\n\nThey use a protocol called RTTY (radioteletype), and it took me a while to decode it. But I found a neat little program called ‚Äúfldigi‚Äù: You can pipe audio to it (single side band modulation), and then if you pick the correct settings (see screenshot), it happily transcribes the messages!\n\nHere‚Äôs the station weather reports for the Baltic Sea and Northern Sea!\n\nI found some other strange signals on the 30-meter band. The Signal Identification Wiki was really helpful for figuring out what they were: FT8!\n\nFT8 is quite a new protocol, invented in 2017, and it seems to be super popular right now! It allows you to transmit short messages, and again, people are looking for people to talk to (CQ), saying how well they receive each other, or saying goodbye (73).\n\nThis is the WSJT-X software.\n\n24: Detect whether your notebook is charging\n\nAs I was browsing the very low-frequency bands, I had a strange problem: Sometimes, that would work okayish, sometimes I could even make out voices!\n\nBut other times, it wouldn‚Äôt work at all, and everything would be loud, angry noise. Even in regions where I had better reception before!\n\nEventually, I found out how to solve that issue ‚Äì by unplugging my notebook charger. D‚Äôoh! :D\n\nIn the low frequencies, occasionally, you can hear a short chirp! :D These are caused by ionosondes, scientific instruments which measure the properties of the ionosphere by sweeping a wide frequency spectrum.\n\nAnother signal (which I accidentally got in the same screenshot) is a radar system ‚Äì in this case, according to the Signal Identification Wiki, it‚Äôs a ‚ÄúCODAR‚Äù system, used to measure the motion of water waves and currents along coasts! :O\n‚Ä¢ Frequency: In all amateur bands, especially the ones below 30 MHz\n\nHow do you transmit speech over long distances? You can use ‚Äúamplitude modulation‚Äù, where you change the volume of the carrier frequency to model your audio.\n\nAs a side effect, the bands to the sides of the carrier will contain a signal, as well.\n\nOne trick is to transmit just those sidebands, which saves power! But you have to ‚Äúguess‚Äù the base frequency when listening. Depending on which part you transmit, this is called ‚Äúlower side band‚Äù or ‚Äúupper side band‚Äù.\n\nSDR++ makes it very easy to play with this! :) Here‚Äôs someone from Serbia!\n\n28: Listen to AM radio from the other side of the world\n\nAt night, low-frequency radio waves can travel further around the world, because they‚Äôre reflected by the layers of the ionosphere! There‚Äôs something magical about this.\n\nI put my antenna outside, and I could hear a lot of broadcasting stations! On short-wave.info, you can look up where they are located.\n\nSome stations in China are broadcasting with very high power! Some I could hear were over 7500 km away.\n\nOriginally, I had planned the project to run from Monday to Friday. When I still had 32 things to do in Friday morning, I knew I‚Äôd need to extend it. But I hadn‚Äôt run out of ideas yet:\n\nAfter I‚Äôd looked into the low frequencies on Thursday, I went to a higher band again: The Citizens Band!\n\nThis is the third frequency band I‚Äôm aware of where anyone is allowed to transmit ‚Äì provided that you use a licensed device!\n\nThis is a band where my random wire antenna really came in handy. Without it, I would have had a hard time understanding anything. And even with it, transmissions are extremely noisy.\n\nCB radio is used internationally, especially by truck drivers, it seems.\n\n30: Assess the propagation of radio waves using beacons\n\nThe International Beacon Project runs a network of 18 stations, which take turns transmitting their callsigns at certain frequencies.\n\nUsing this system, you can quickly get a sense of how well radio waves are currently propagating to your location. Clever!\n\nI picked up the beacon from southern Finland! You can see its callsign scrolling away in the video. It‚Äôs followed by four dashes send with decreasing power. I only heard the first one‚Ä¶\n\nI would‚Äôve loved to receive DCF77, which powers the radio clocks in Germany! But no matter how hard I listened to 77.5 kHz, there was nothing there. I don‚Äôt think my dongle can do that.\n\nSo I used higher frequencies! Russia transmits its ‚ÄúRWM‚Äù time signal at 9996 kHz, which beeps every second, with a long beep for the full minute.\n\nNot enough to tell the time, but enough to adjust your wrist watch, I guess!\n‚Ä¢ Frequency: 3855, 7880, and 13882.5 kHz (see weatherfax.com for more)\n\nThe German Weather Service broadcasts weather maps throughout the day! You can decode them using fldigi‚Äôs ‚ÄúWEFAX-576‚Äù setting.\n\nI caught this one only halfway through. According to the schedule, it‚Äôs the ‚ÄúSurface weather chart North Atlantic, Europe‚Äù!\n\nIf you squint really hard, you can make out the coast of Spain and the Mediterranean Sea on the right side!\n\nI couldn‚Äôt stop trying to capture a weather satellite, it‚Äôs just too cool to receive an image from space!\n\nThat evening, an American satellite called NOAA-15 passed right over us, so I thought I‚Äôd try again. And this time, I got parts of an image! \\o/\n\nThis is real-time data! At night, both transmitted images are infrared recordings.\n\nI recorded the FM signal using SDR++, and then decoded the image using noaa-apt, which also added country outlines.\n\nHere‚Äôs what the NOAA-15 weather satellite sounds like, by the way! tick-tock\n\nWhile recording, I noticed something strange: The transmission didn‚Äôt happen at the frequency I had expected it to! And also, the frequency changed.\n\nThen it hit me: Doppler effect! At the time of the recording, the frequency was around 4250 Hz higher than expected.\n\nAfter looking up the formula, I calculated a relative speed of 9 km/s! (Which got close to its real speed, 7.5 km/s.)\n\nThese stations send encrypted messages using number sequences, possibly for espionage purposes!\n\nSo why not listen to one? There‚Äôs a surprisingly well-maintained database of them on a site call Priyom.\n\nSo I tuned into the next frequency that was listed, and: Bingo!\n\nAllegedly, this was a station in Moscow. That day, it sent ‚Äú218, 218, 218‚Äù in a loop, followed by three long beeps, which is the format of a ‚Äúnull message‚Äù.\n\nSo no news for the Russian spies.\n\nThe week was really intense for me. Initially, I thought I‚Äôd do 10 things per day, but it turned out that that was too much. I had to learn so many new things.\n\nMany things I tried don‚Äôt work on my first attempt. Finding LoRaWAN signals, decoding packet radio, finding something on PMR446, decoding the satellite ‚Äì those were all things that required a second (or third) attempt.\n\nThis project was exhausting, but also joyful ‚Äì having committed to it, I got in a nice flow state, where I could focus on it for hours.\n\nOften, I thought: ‚ÄúOkay, this is it. I can‚Äôt possibly find more things.‚Äù But this is the power of the 50 Things technique: I have to keep looking, leave my comfort zone, be creative, try things I otherwise wouldn‚Äôt have tried!\n‚Ä¢ Frequency: 14.230, 14.233, 21.340, 28.680, 145.625 MHz seem to be popular\n\nUsing a protocol called ‚ÄúSSTV‚Äù (slow-scan television), amateur radio operators send each other postcards! :D\n\nI‚Äôve been browsing the usual frequencies, and tried to decode images using the software QSSTV on Linux. And I accidentally caught a piece of what seems to be a test image!\n\nThere‚Äôs a mysterious Russian station broadcasting at 4625 kHz. Sometimes, it sends encrypted voice messages.\n\nBut usually, all it does is send a honking sound every two seconds, to deter other stations from using the same frequency.\n\nThe purpose of the station is unclear, but most theories think it‚Äôs military communication.\n\nThis was a bit like trying to catch a rare insect! üêõ\n\nLoRaWAN is a low-power, wide-area networking protocol, intended for ‚ÄúInternet of Things‚Äù applications.\n\nYou can see transmission in the lower half of the screenshot! It has a very cute structure: You can see eight ‚Äúdown-chirps‚Äù, followed by two ‚Äúup-chirps‚Äù. That‚Äôs the header, followed by the payload.\n\nTo look for the signal, I made a ‚Äúbaseband capture‚Äù in SDR++, and opened the recording in Sonic Visualizer.\n\nDevices like smoke detectors or meters for water or heat are sending their readings via a protocol called Wireless M-Bus.\n\nAgain, I was surprised by how many devices seem to be around! Thanks for the tip, @envy :)\n\nwmbusmeters is a really nice tool for decoding the messages.\n\nThe chips in my SDR stick are also being used in DVB-T dongles! So, can we watch TV? Unfortunately, no.\n\nFrom what I pieced together, there‚Äôs a difference between using the stick in SDR mode (where it sends the full spectrum), and in TV mode (where it sends the decoded video).\n\nIn Germany, there‚Äôs now DVB-T2, which my hardware doesn‚Äôt support in TV mode. And in SDR mode, the bandwidth is too narrow for DVB-T2. But we can scroll over a channel and look at it! :3\n\nDid a little walk to a big intersection, to see what ‚Äúdevice signals‚Äù I‚Äôd find there at 433 MHz.\n\nI could confirm that the IBIS beacons are in fact being sent by buses! The included ‚Äúvehicle ID‚Äù even matches the white number that‚Äôs printed on it.\n\nI also saw some messages from tire pressure monitoring systems in cars! They also include an ID, and usually, the brand of the car! The owners probably aren‚Äôt aware how easy it would be to track them‚Ä¶ (Thanks, @scy!)\n\nSide note: I wonder why some signals in that band are warped like the one at 433.96 MHz here!\n\nAt first, I thought ‚ÄúAh, Doppler effect again, it‚Äôs coming from a moving car!‚Äù But if that‚Äôd be the case, that car would be moving at over 700 m/s‚Ä¶\n\nFriends later suspected that this effect is due to weak batteries affecting the crystal in the sending devices, or temperature changes.\n\nSo I caught a satellite again! :D This time, it was school project, the Italian satellite ‚ÄúMax Valier‚Äù. It continuously sends Morse code on a beacon frequency.\n\nPretty weak signal, but here‚Äôs what I could hear:\n\nSuper happy about this! I got both the name of the satellite, as well as its callsign at the end, and what seems to be some kind of greeting? I later learned that is Morse code shorthand for ‚Äúand‚Äù, and that Manfred and Christa Fuchs were the founders of a company that helped launch the satellite!\n\nThis is another thing that‚Äôs not allowed in Germany, so you shouldn‚Äôt do it.\n\nPagers use a format called ‚ÄúPOCSAG‚Äù (Post Office Code Standardisation Advisory Group‚Ä¶), which you should not decode using multimon-ng.\n\nBecause you would find that the content is short and cryptic anyway. It would probably be repeated by several stations all around you, to make sure the whole region is covered.\n\nDo not read the English Wikipedia page! It contains frequencies!\n\nAt this point, I was pretty tired. Focusing on this project for 6 days straight took a lot of energy, and I was always uncertain if I could actually complete all 50 things in that week! But I woke up with a fun idea:\n\n44: Detect when a smartphone is turned on\n\nI was curious whether I could see the NFC transceiver in my smartphone! And yeah, especially using my random wire antenna, this works really well!\n\nMy smartphone seems to emit at the NFC frequency a couple of times per second. And when unlocking the screen, it emits five very strong beeps on that frequency! I can see those from the other side of our apartment.\n\nSurely, these signals are the same for every device, right? üò∂\n\nObserve the five beeps here:\n\nPiko and I played around with NFC a bit more, and we found out that when getting close to an NFC tag, a smartphone emits at 13.56 MHz continuously!\n\nSo, we started sending Morse code to each other between rooms, using a smartphone and a library book! :‚ÄôD\n\nSeems that the shortest signal you can create is 0.7 s long, resulting in a meager communication speed of 3-4 words per minute‚Ä¶\n\nThere are ground stations that emit a signal that allow calculating your angle relative to it! If you receive two, you can determine your position. (Thanks, @fly_it!)\n\nI heard the one close to Hamburg! And SDRangel has a decoder, of course! It calculated angles between 210¬∞ and 230¬∞, which is pretty close to the actual value of 224¬∞! I don‚Äôt think they are meant to be used from the ground.\n\nThe neat navigational map is from https://skyvector.com!\n\nI spent ages trying to build my own decoder in GNU Radio. But I wasn‚Äôt familiar with it at all, and I eventually gave up. Still, that seems to be the software you wanna learn for tasks like these!\n\nBy the way, how the ground stations work is fascinating: In my case, it‚Äôs a ‚ÄúDoppler VOR‚Äù: It transmits a static frequency via amplitude modulation, and adds another signal that moves around in circles, so you get a Doppler frequency shift.\n\nIf you compare the two, you can calculate the angle!\n\n47: See how low you can go in the frequency spectrum\n\nThis was a fun exploration: What‚Äôs the lowest-frequency broadcast I can receive?\n\nThe RTL-SDR Blog V4 stick I‚Äôm using has a neat feature ‚Äì a built-in ‚Äúupconverter‚Äù, which is enabled automatically when you try to listen to frequencies below what the chipset supports. This allows it to receive down to ~500 kHz!\n\nThe first stations that are comprehensible started at 1 MHz for me.\n\n48: See how high you can go in the frequency spectrum\n\nThe chipset in my SDR stick go up to maximum frequency of 1766 MHz. It seems pretty quiet up there, probably because I lack proper antennas. I found these three lines in an amateur band, but they probably originate from the stick itself, or another device.\n\nSo the highest-frequency thing I‚Äôve received is ADS-B at 1090 MHz (see entry #5)! üéâ\n\nWe‚Äôve been over this. Not allowed in Germany. Don‚Äôt do it. ‚õî\n\nBut if you‚Äôre in the US, anyone can purchase a marine radio, and even use it to transmit! :D\n\nJust now, I was wondering whether there are any Android apps for controlling SDRs.\n\nAnd it turned out, the software I liked best that week, SDR++, had an Android version since a couple of weeks! \\o/\n\nSo now I could go track down the source of some of these strange signals! :3\n\nAnd with that, ‚Ä¶ ü•Å ‚Ä¶ I was officially done with my ‚Äú50 things to do with a software defined radio‚Äù! üéâ\n\nThis were seven very intense days, where I learned a lot of new things about radio waves and the many things they can be used for!\n\nI was proud! I was tired! I was amazed that all those things I received are all around us, everywhere, all at once ‚Äì if you know where to look. :O\n\nHere‚Äôs some things that I haven‚Äôt tried or that haven‚Äôt worked:\n‚Ä¢ Receiving digital voice modes (SDRangel should be able to do it, but I couldn‚Äôt figure it out)\n‚Ä¢ Receive something from the ISS\n‚Ä¢ Use the GRAVES radar to detect meteors (couldn‚Äôt detect it)\n\nAlso, doing things with Wi-Fi/Bluetooth/Zigbee could be fun, but I‚Äôd need a more expensive receiver for those frequencies.\n\nSo, was this project in fact a gateway drug to getting an amateur radio license?\n\nYeah, probably. I‚Äôd love to transmit something and experiment more! :D\n\nIn Germany, a new license class will be introduced in summer 2024, that‚Äôll allow you to send on the 10-meter, 2-meter and 70-cm bands (the ‚ÄúN class‚Äù).\n\nIn fact, there‚Äôs a really good German online course that teaches you everything you need to know: 50ohm.de\n\nHighly recommended, even if you‚Äôre not planning on getting a license.\n\nFinally, thanks to Piko, Chris, and Cqoicebordel for proof-reading this blog post! <3\n\nYou can add your comment in the Fediverse! Alternatively, drop me a mail at mail@blinry.org. Also, you can support me on Patreon or subscribe to my newsletter",
      "author": "blinry",
      "published_date": null,
      "meta_description": "Last week, I went on an adventure through the electromagnetic spectrum!",
      "word_count": 5244,
      "scraping_method": "goose3"
    },
    {
      "url": "https://support.apple.com/en-us/125142",
      "title": "Apple releases iOS 15.8.5 security update for 10-year old iPhone 6s",
      "content": "About the security content of iOS 15.8.5 and iPadOS 15.8.5\nThis document describes the security content of iOS 15.8.5 and iPadOS 15.8.5.\nAbout Apple security updates\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\nApple security documents reference vulnerabilities by CVE-ID when possible.\nFor more information about security, see the Apple Product Security page.\niOS 15.8.5 and iPadOS 15.8.5\nReleased September 15, 2025\nImageIO\nAvailable for: iPhone 6s (all models), iPhone 7 (all models), iPhone SE (1st generation), iPad Air 2, iPad mini (4th generation), and iPod touch (7th generation)\nImpact: Processing a malicious image file may result in memory corruption. Apple is aware of a report that this issue may have been exploited in an extremely sophisticated attack against specific targeted individuals.\nDescription: An out-of-bounds write issue was addressed with improved bounds checking.\nCVE-2025-43300: Apple\nInformation about products not manufactured by Apple, or independent websites not controlled or tested by Apple, is provided without recommendation or endorsement. Apple assumes no responsibility with regard to the selection, performance, or use of third-party websites or products. Apple makes no representations regarding third-party website accuracy or reliability. Contact the vendor for additional information.\nPublished Date:¬†September 15, 2025",
      "author": null,
      "published_date": null,
      "meta_description": "This document describes the security content of iOS 15.8.5 and iPadOS 15.8.5.",
      "word_count": 221,
      "scraping_method": "beautifulsoup"
    },
    {
      "url": "https://noctua.at/en/how-to-make-the-framework-desktop-run-even-quieter",
      "title": "How to make the Framework Desktop run even quieter",
      "content": "Not so long ago, the compact, small form factor PC segment witnessed a significant refreshment with the launch of the Framework desktop PC. If you've missed it and are wondering why this mini-PC is considered so special, it's because it was the first desktop PC to utilise the AMD Ryzen AI Max APU, a processor previously exclusive to laptops.\n\nThe AMD Ryzen AI Max processor stands out for its exceptional speed and integrated graphics performance, frequently surprising users with its gaming capabilities, even on demanding titles. Users often highlight its powerful integrated GPU, which can leverage a massive memory pool (up to 96GB for AI tasks), allowing it to efficiently handle complex AI and deep learning workloads. The raw performance delivered by this chip makes it a worthwhile choice for intensive tasks and creative workflows.\n\nAs a collaborator and partner on the Framework Desktop mini-PC project, our first steps involved integrating our NF-A12x25 fan and a fan duct. This way, we could significantly reduce system noise levels while ensuring safe operating temperatures ‚Äì you can read more about this here. But can the Framework Desktop be made even quieter? We wanted to leave no stone unturned to find out, so we took it a step further by trying to integrate our signature Noctua fan grill design that debuted on the Seasonic Prime TX-1600 Noctua Edition power supply.\n\nIt must be noted that customer safety and EMC requirements for the mini PC, a standalone electrical item, differ from those for hardware components (such as the PSU) designed to be inside a PC case. The safety standard suggests that ventilation openings on case side panels need to be less than 5mm in diameter. To comply with safety regulations, we created an updated version of the original fan grille as implemented on the Seasonic Prime TX 1600 Noctua Edition power supply featuring more struts and a smaller opening size, ensuring full adherence to these standards. To complement the new grille design, we have also designed a custom, funnel shaped fan duct that makes maximum use of the outermost openings of the custom side panel.\n\nIn combination, the custom side panel and duct design provided a massive noise reduction compared to the stock configuration, particularly in lower fan speed ranges. We have measured around 7 dB(A) lower noise levels at around 50% fan speed, and up to 5 dB(A) lower at higher fan speeds, when compared at the same APU operating temperature.\n\nWhile the custom side panel with our signature Noctua grill as well as the custom fan duct are not slated for mass production at this point, we are more than happy to share the 3D CAD files for everyone who is looking to make their Framework Desktop run even quieter.\n\nBoth the custom side panel and the customised fan ductare available to download at Printables.com for you to 3D-print at home:\n‚Ä¢ Custom fan duct to make best use of the custom side panel\n\nFortunately, the quality of 3D printing technologies has advanced so much that you can end up with a nice, clean side panel, which will additionally optimise the sound profile, or bring your APU temperatures down significantly.\n\nIn addition to redesigning and testing the Noctua fan grill, we also evaluated various other scenarios. These included replacing the NF-A12x25 with its G2 variant and incorporating an additional 8cm fan for exhaust purposes. The findings of these tests may prove surprising. The additional NF-A8 PWM fan, which was added as an exhaust fan at the front of the case, yielded slightly lower temperatures, but at the expense of extra noise emission, so it‚Äôs not a setup that we would recommend from a performance-to-noise efficiency point of view.\n\nWhile upgrading to an NF-A12x25 G2 does provide some acoustical benefits compared to the stock setup (around 1 to 1.5 dB(A) lower noise levels at the same temperatures), its maximum speed is limited to 1800 RPM, so it cannot match the performance headroom of the 2400 RPM HS-PWM version of the NF-A12x25 that is supplied with the Framework Desktop PC. This high-speed version of the ‚ÄûG1‚Äú fan is a safeguard that ensures the system can maintain full performance in worst-case conditions with high ambient temperatures. In other words, we would only recommend upgrading to the NF-A12x25 G2 if you seek to lower noise levels as much as possible and if you are willing to sacrifice the maximum performance headroom in worst-case scenarios that the G1 HS-PWM fan provides.\n\nIn summary, after a lot of simulation, experimenting and testing, we can conclude that not all tweaks to the Framework Desktop‚Äôs cooling setup make sense. However, if you have access to a 3D printer, swapping the stock side panel and fan duct for the custom designed ones can help to make your unit run significantly quieter.",
      "author": null,
      "published_date": null,
      "meta_description": "Designed in Austria, Noctua's premium cooling components are renowned for their superb quietness, exceptional performance and thoroughgoing quality.",
      "word_count": 800,
      "scraping_method": "goose3"
    },
    {
      "url": "https://www.gavi.org/vaccineswork/denmark-close-wiping-out-leading-cancer-causing-hpv-strains-after-vaccine-roll-out",
      "title": "Denmark close to wiping out cancer-causing HPV strains after vaccine roll-out",
      "content": "News from the lab\nHPVSpotlight on HPV\nDenmark close to wiping out leading cancer-causing HPV strains after vaccine roll-out\nA nationwide study suggests infections with human papillomavirus (HPV) types 16 and 18 have been virtually eliminated since vaccination began in 2008 ‚Äì protecting even unvaccinated women.\n2\nSeptember\n2025\n3\nmin read\nby\nLinda Geddes\nRepublish this article\nRepublish this article\nDisclaimer\nIf you would like to republish this article, please follow these steps: use the HTML below; do not edit the text; include the author‚Äôs byline; credit VaccinesWork as the original source; and include the page view counter script.\n<article>\n<h1>\n<span>Denmark close to wiping out leading cancer-causing HPV strains after vaccine roll-out</span>\n</h1>\n<div>\n<div><p>A nationwide study suggests infections with human papillomavirus (HPV) types 16 and 18 have been virtually eliminated since vaccination began in 2008 ‚Äì protecting even unvaccinated women.</p></div>\n</div>\n<ul>\n<li>\n<b>2\nSeptember\n2025</b>\n</li>\n<li>\n<b class=\"me-2\">by</b>\n<span>\n<a href=\"https://www.gavi.org/vaccineswork/authors/linda-geddes\" hreflang=\"en\">Linda Geddes</a>\n</span>\n</li>\n</ul>\n<div>\n<div>\n<div>\n<div>\n<div>\n<p>¬†</p><p>Denmark has effectively eliminated infections with the two biggest cancer-causing strains of human papillomavirus (HPV) since the vaccine was introduced in 2008, data suggests.</p><p>The research, published in <a href=\"https://www.eurosurveillance.org/content/10.2807/1560-7917.ES.2025.30.27.2400820\"><em>Eurosurveillance</em></a>, could have implications for how vaccinated populations are screened in the coming years ‚Äì particularly as people increasingly receive vaccines that protect against multiple high-risk types of HPV virus.</p><aside class=\"pquote\"><blockquote><p>Before vaccination, the prevalence of HPV16/18 was between 15 and 17%, which has decreased in vaccinated women to less than one percent by 2021.</p></blockquote><p>- Researchers, <a href=\"https://www.eurosurveillance.org/content/10.2807/1560-7917.ES.2025.30.27.2400820\"><em>Eurosurveillance</em></a></p></aside><h3>Deadly cancer</h3><p>After breast cancer, cervical cancer is the most common type of cancer among women aged 15 to 44 years in Europe, and human papillomavirus (HPV) is the leading cause.</p><p>At least 14 high-risk types of the virus have been identified, and before Denmark introduced the HPV vaccine in 2008, HPV types 16 and 18 accounted for around three quarters (74%) of cervical cancers in the country.</p><p>Initially, girls were offered a vaccine that protected against four types of HPV: 16, 18, plus the lower risk types 6 and 11. However, since 2017, Danish girls have been offered a vaccine that protects against nine types of HPV ‚Äì including those accounting for approximately 90% of cervical cancers.¬† ¬†¬†</p><div><h4>Have you read?</h4><ul><li><a href=\"https://www.gavi.org/vaccineswork/six-ways-hpv-vaccine-saving-lives\">Six ways the HPV vaccine is saving lives</a></li><li><a href=\"https://www.gavi.org/vaccineswork/hpv-poses-ongoing-threat-older-women-study-finds\">HPV poses ongoing threat for older women, study finds</a></li></ul></div><p>To better understand the impact that these vaccination programmes have had on HPV prevalence as vaccinated girls reach cervical screening age (23 to 64 years in Denmark), Dr Mette Hartmann Nonboe at Zealand University Hospital in Nyk√∏bing Falster and colleagues analysed up to three consecutive cervical cell samples collected from Danish women between 2017 and 2024, when they were 22 to 30 years of age.</p><p>‚ÄúIn 2017, one of the first birth cohorts of women in Denmark who were HPV-vaccinated as teenage girls in 2008 reached the screening age of 23 years,‚Äù Nonboe explained.</p><p>‚ÄúCompared with previous generations, these women are expected to have a considerably lower risk of cervical cancer, and it is pertinent to assess [their] future need for screening.‚Äù</p><h3>High-risk HPV elimination</h3><p>The research found that infection with the high-risk HPV types (HPV16/18) covered by the vaccine has been almost eliminated.¬†</p><p>‚ÄúBefore vaccination, the prevalence of HPV16/18 was between 15 and 17%, which has decreased in vaccinated women to less than one percent by 2021,‚Äù the researchers said.</p><p>In addition, prevalence of HPV types 16 and 18 in women who had not been vaccinated against HPV was five percent. This strongly suggests that the vaccine has reduced the circulation of these HPV types in general population, to the extent that even unvaccinated women are now less likely to be infected with them ‚Äì so called ‚Äúpopulation immunity‚Äù ‚Äì the researchers said.</p><aside class=\"pquote\"><blockquote><p>In 2017, one of the first birth cohorts of women in Denmark who were HPV-vaccinated as teenage girls in 2008 reached the screening age of 23 years. Compared with previous generations, these women are expected to have a considerably lower risk of cervical cancer.</p></blockquote><p>- Mette Hartmann Nonboe, Researcher, <a href=\"https://www.eurosurveillance.org/content/10.2807/1560-7917.ES.2025.30.27.2400820\"><em>Eurosurveillance</em></a></p></aside><p>Despite this good news, roughly one third of women screened during the study period still had infection with high-risk HPV types not covered by the original vaccines ‚Äì and new infections with these types were more frequent among vaccinated women, compared to unvaccinated ones.</p><p>This is expected to fall once girls who received the more recent ‚Äònine-valent‚Äô vaccine reach screening age. At this point, the screening guidelines should potentially be reconsidered, Nonboe and colleagues said.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<p>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.gavi.org/vaccineswork/denmark-close-wiping-out-leading-cancer-causing-hpv-strains-after-vaccine-roll-out\">Original article</a>\n</p><p>This article was originally published on\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.gavi.org/vaccineswork\">VaccinesWork</a>\n</p><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\nnew Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\nj=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n})(window,document,'script','dataLayer','GTM-M7H54VD');</script><noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-M7H54VD\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript></article>\nCopy html\nA plaster is applied to the injection site of a young woman after receiving a vaccination. Credit: Centers for Disease Control and Prevention (CDC)\nDenmark has effectively eliminated infections with the two biggest cancer-causing strains of human papillomavirus (HPV) since the vaccine was introduced in 2008, data suggests.The research, published in Eurosurveillance, could have implications for how vaccinated populations are screened in the coming years ‚Äì particularly as people increasingly receive vaccines that protect against multiple high-risk types of HPV virus.Deadly cancerAfter breast cancer, cervical cancer is the most common type of cancer among women aged 15 to 44 years in Europe, and human papillomavirus (HPV) is the leading cause.At least 14 high-risk types of the virus have been identified, and before Denmark introduced the HPV vaccine in 2008, HPV types 16 and 18 accounted for around three quarters (74%) of cervical cancers in the country.Initially, girls were offered a vaccine that protected against four types of HPV: 16, 18, plus the lower risk types 6 and 11. However, since 2017, Danish girls have been offered a vaccine that protects against nine types of HPV ‚Äì including those accounting for approximately 90% of cervical cancers.¬† ¬†¬†Have you read?Six ways the HPV vaccine is saving livesHPV poses ongoing threat for older women, study findsTo better understand the impact that these vaccination programmes have had on HPV prevalence as vaccinated girls reach cervical screening age (23 to 64 years in Denmark), Dr Mette Hartmann Nonboe at Zealand University Hospital in Nyk√∏bing Falster and colleagues analysed up to three consecutive cervical cell samples collected from Danish women between 2017 and 2024, when they were 22 to 30 years of age.‚ÄúIn 2017, one of the first birth cohorts of women in Denmark who were HPV-vaccinated as teenage girls in 2008 reached the screening age of 23 years,‚Äù Nonboe explained.‚ÄúCompared with previous generations, these women are expected to have a considerably lower risk of cervical cancer, and it is pertinent to assess [their] future need for screening.‚ÄùHigh-risk HPV eliminationThe research found that infection with the high-risk HPV types (HPV16/18) covered by the vaccine has been almost eliminated.¬†‚ÄúBefore vaccination, the prevalence of HPV16/18 was between 15 and 17%, which has decreased in vaccinated women to less than one percent by 2021,‚Äù the researchers said.In addition, prevalence of HPV types 16 and 18 in women who had not been vaccinated against HPV was five percent. This strongly suggests that the vaccine has reduced the circulation of these HPV types in general population, to the extent that even unvaccinated women are now less likely to be infected with them ‚Äì so called ‚Äúpopulation immunity‚Äù ‚Äì the researchers said.Despite this good news, roughly one third of women screened during the study period still had infection with high-risk HPV types not covered by the original vaccines ‚Äì and new infections with these types were more frequent among vaccinated women, compared to unvaccinated ones.This is expected to fall once girls who received the more recent ‚Äònine-valent‚Äô vaccine reach screening age. At this point, the screening guidelines should potentially be reconsidered, Nonboe and colleagues said.\nMore from Linda Geddes\nView all\nCan MMR vaccines cause autism?\n10\nSep\n2025\n9\nmin read\nverified\nMeaslesMumpsRubellaVaccine safety\nMalaria education could reduce cases by over a fifth, study finds\n8\nSep\n2025\n3\nmin read\nverified\nMalariaSpotlight on malaria\nDenmark close to wiping out leading cancer-causing HPV strains after vaccine roll-out\n2\nSep\n2025\n3\nmin read\nverified\nHPVSpotlight on HPV\nScientists make breakthrough towards ‚Äòuniversal‚Äô antiviral drugs\n29\nAug\n2025\n3\nmin read\nverified\nResearch summary\nRecommended for you\nSenegal rolls out ‚Äúsix-in-one‚Äù jab, making life easier for families and health workers\n16\nSep\n2025\n5\nmin read\nverified\nChild dies from complications of measles years after infection ‚Äì SSPE explained\n16\nSep\n2025\n3\nmin read\nverified\nA Nigerian father of 21 children decided to give vaccines a shot. His whole community benefited\n15\nSep\n2025\n4\nmin read\nverified\nNo girl left behind: HPV vaccines bring hope to Pakistan\n15\nSep\n2025\n5\nmin read\nverified\nThere‚Äôs a new outbreak of Ebola in Africa. Here‚Äôs what you need to know\n15\nSep\n2025\n4\nmin read\nverified\nFrom data to decisions: why political economy analysis matters for reaching zero-dose children\n12\nSep\n2025\n6\nmin read\nverified",
      "author": null,
      "published_date": null,
      "meta_description": "A nationwide study suggests infections with human papillomavirus (HPV) types 16 and 18 have been virtually eliminated since vaccination began in 2008 ‚Äì protecting even unvaccinated women.",
      "word_count": 1489,
      "scraping_method": "beautifulsoup"
    },
    {
      "url": "https://asibahi.github.io/thoughts/a-gentle-introduction-to-z3/",
      "title": "A dumb introduction to z3",
      "content": "Recently I have come across a nice article: Many Hard Leetcode Problems are Easy Constraint Problems, and I figured, I really should learn how to use these things! What else do I really have to do? I have had use for solvers (or as they are commonly called: theorem provers) In a previous article, but then I tried to prove the things with good old algorithms. I looked at at the time, but found the whole concept a bit too opaque. Now however, it seemed a bit easier to get into.\n\nTo be clear, as of writing these words, I have only been looking at reading material for two days. I am in no way an expert, and I have not written anything more complex than a solver for the change counter problem (the first example in the article listed above). So I am writing this really knowing nothing about the underlying theory, theorem provers, or whatever the hell \"unification\" is. There is a good chance you know more about this than I do.\n\nThere are bindings in many popular languages. I will be using 's Rust bindings, because I am more comfortable in Rust than, say, Python or JavaScript. The examples I worked with to understand however, can be found in two nice documents:\n‚Ä¢ First is in Python\n\nSolvers are a class of .. tools? libraries? where you input some rules and constraints and have the tool just .. solve it for you. It is not going to be a faster or more optimized solution than a custom made algorithm, but it is much easier to change the rules on the fly.\n\nThere are many real world uses. They are often used for scheduling and resource allocation problems. Consider the common scenario of a school schedule: Mary cannot work on Tuesdays because she needs to take care of her father; John lives far so he cannot give classes before 10; Class 3-A is full of nerds so their math hours are double; city council regulates no outdoor activity after 12; Susan and Sarah hate each other so you should not have them teach the same class; etc. You can either have two teachers work on it for a week, or just pop it in a solver!\n\nThe MiniZinc homepage (another popular solver) has a couple of nice examples: a seating chart, rostering, vehicle routing, grid coloring.\n\nOn that note, you might wonder: why did I go with when MiniZinc has a more colorful homepage and is actually referenced by the article linked at the start of this article? The answer is because has bindings in Rust. That is pretty much it.\n\nDocumentation on and its API use a lot of jargon, which makes the whole thing really difficult to wade into without a previous background. I will explain things as I understand when I get to them, but two things really stand out.\n\nThe first is the word . You see this in the context of arrays and function declarations (we will get to those, I hope). But it has nothing to do with .. well .. sorting. is just the jargon word for types.\n\nThe second one is constants. They are not what a normal person would call constants: they are actually the knobs the solvers use to solve problems. There are two types of constants: free, which are what one would call variables; and interpreted, which is when you'd type an integer literal and clever type machinations turns it into a constant in the solver.\n\nNote that also solvers do not work within the regular type system of the programming language. They have their own types (sorry, sorts), and operations that may or may not map nicely to the language's types and operations. Much of the actual code you are writing is about expressing things in the target solver's language. uses a language called \"SMT-LIB2\" (henceforth called ), apparently. And you can actually write your constraints immediately in said language and have the library consume it. Much of what the bindings is take your code and translate internally to this language before feeding it to the solver.\n\nLet's start with what might be the simplest, dumbest equation. Solve for :\n\nYes, a child (literally) can solve this. But it is nice. Here is the Rust program to solve it.\n\nThis prints out the solution. equals three. Who would have guessed?\n\nThe Rust bindings have some nice ergonomics here. You can simply do and it would do all the bookkeeping behind closed doors to transform the (and the ) into an interpreted constant and have them inserted into the internal model.\n\nThe reason you have to pass in a string in is that this is the name given to the variable in . It does not have to be , it can be anything. Why do the bindings not autogenerate the name for you? Who knows.\n\nIf you print the solver (as in ), you will get the following output in the .\n\nNote that the variable you declared is declared as a function. A free constant is basically a function that takes no input and gives an output (here of sort ). The solver finds which version of the function satisfies the assertions. This also explains the arrow in earlier. evaluates to 3.\n\nIn school, jumping from solving equations with a single variable to equations with two variables was a real jump on complexity. Everything was doubled! Here is a pair of equations we will try to solve next:\n\nHere is the program. I am going to print the result of first, tho. I just made up those numbers!\n\nThis prints out the following:\n\nOh it is . Unsatisfiable. Bummer. This means this cannot be solved as defined.\n\nLet's try changing the type to . The type does not have the same nice ergonomics as apparently, so the code will look slightly uglier. This is the new updated code.\n\nExcellent! Using and printing the model as before gives us the following answer, presented as a nice rational number.\n\nTo actually extract the values programmatically, instead of debug printing , requires some song and dance with the API, but it is simple, really. This is what it would look like.\n\nAs I am sure you know from your high school math, some equations have multiple solutions. Here is a simple one.\n\nThe Rust bindings have a nice method for getting multiple solutions out of a solver, simply called . It works similarly to above, and takes the same parameters with the same output. Here is the complete program. (I am going back to because I am not cool enough for numbers.)\n\nI am not clear really on how to get multiple solutions with the regular followed by method, but this one is easy enough to use. Also, some problems might have infinitely many solutions, so it is advisable to use with the iterator. To demonstrate, I will use the circle equation.\n\nHere is the straightforward script followed by the printed out result. Note that the API creates a unique name for every invocation.\n\nThis goes without saying, but if I used the type in this example it would generate infinite solutions.\n\nThe Coin Change problem is a simple one: given a list of denominations and a total, find the smallest number of coins that add up to said total. Emphasis on smallest. Unlike previous problems, this is an optimization problem. We are looking for a solution that satisfies specific criteria instead of just a solution. Conveniently enough, provides an object which we can use to optimize.\n\nLet us set up the parameters of the problem in plain language. The denominations we have are 1, 5, and 10. We need to give 37 money in the least amount of coins. This is simple enough that we can know the solution is three 10 coins, one 5 coin, and two 1 coins. Let's see if we can get the same result. As usual, code followed by output:\n\nOops. This cannot be right.\n\nI do not really understand why the answer is so nonsensical here. The problem is that really spans the entire natural integers range, so it is accounting for negative amounts of coins. This still does not explain how the optimal solution given is 37 coins. (If you can explain, please let me know.)\n\nThe solution for this is to constrain the amount of coins to be non-negative. So let's do that. Add these assertions somewhere before , and Bob's your uncle.\n\nThat's more like it. Now let's try with different denominations. Something like 10. 9, and 1. Note that the optimal solution for 37 would be: one 10 coin, three 9 coins, and no 1 coins. The greedy solution would fail to catch that. Here is the output of printing the optimizer and the result.\n\nCurrently, the total 37 is hardcoded. But what if I want the answers for a number of different totals? Thankfully, you do not need to build the optimizer from scratch for every total. Instead, use the magical functions and . The first one essentially creates a bookmark in the stack of assertions. The second removes everything above said bookmark, and the bookmark. It is simple really. Here are the solutions from 30 to 39, because why not.\n\nHere is the full . I will spare you the output.\n\nNote that the and API is available for as well. At any rate, back to solving.\n\nThis is a significant jump in complexity, so bear with me. We are going to solve a Sudoku. So let's write the constraints first. We can use Rust's arrays or to organize our s and check their constraints. First, this is the puzzle we are solving:\n\nI will forgo the steps to turn that into a . Instead the code below will get that info from a function.\n\nPrinting the solver after each step lets you debug whether you have your constraints correctly. The printout is over 200 lines long, so let's skip that. All we have to do next is to check the value of each cell in .\n\nAnd this prints out the result. You can verify for yourself whether this is correct or not. Maybe try other puzzles. Or add more constraints. You can even try the Miracle Sudoku.\n\nOne thing of note here: which is how dumb the solver is. Note that if you print out the solver, there is no notion of rows and columns and squares. It does not know any Sudoku tricks like X-wings and what have you. All the data is organized on the Rust side of things, and what is given to the solver is \"these two variables cannot be the same\" over and over and over again. And it just .. tells you what the rest of them are.\n\nAnother thing that is not obvious at first glance, is that it does not check if there is a unique solution. The puzzle may be badly constructed and have multiple solutions, and it will happily give you one, or two, or how many you ask for. It does, however, check if it is unsolvable!\n\nOne of the famous examples of using solvers in production is .. layouting. You have a number of elements and you want to arrange them on a page, or a browser window, or whatever. So let's do a rudimentary version of that.\n\nThe page we are layouting has an arbitrary size of 190mm width by 270mm tall. We are to put three boxes on the page of varying sizes and rules. I am just spitballing the sizes here: first box is 105mm by 140mm; second is 85 by 135, third is 120 by 110. They should not overlap, and like .. that's it?\n\nThis prints out this neat solution:\n\nObviously, all these examples are rather simple. Figuring out how to model the problem in the form of boolean rules and constraints is almost all the challenge. There are some limitations, too: cannot solve equations of the sort ; it cannot call external functions to get values (though there are ways to work around that).\n\nThere is plenty of stuff I have not shown. s, which are nothing like programming language arrays and more mappings from one domain to another. , bit vectors, which allow bitwise operations on their values like and and bit shifting. (Which are the key to solving the Hanging Gardens Problem.) s and s and s and regexes and stuff I have not really looked into. Unfortunately, most resources on the web are a bit heavy on theory, and are not targeted to stupid coders like myself.",
      "author": null,
      "published_date": null,
      "meta_description": "Exploring the world of constraint solvers with very simple examples.",
      "word_count": 2115,
      "scraping_method": "goose3"
    },
    {
      "url": "https://www.jeffgeerling.com/blog/2025/cubesats-are-fascinating-learning-tools-space",
      "title": "CubeSats are fascinating learning tools for space",
      "content": "These are CubeSats. Satellites that are going to space‚Äîor at least, the ones I have here are prototypes. But these have one thing in common: they're all powered by either a Raspberry Pi, or a microcontroller.\nThere are already Pis in space, like on Mark Rober's SatGus, on GASPACS, and the Astro Pis on the Space station. Another Pi is going up this weekend, which is why I'm posting this today. I'll get to that one, but I wanted to spend some time talking about two things that fascinate me: Raspberry Pis, and putting them space!\nIn this post, I'll cover:\nWhat is a CubeSat\nWho builds and launches CubeSats\nHow you can build your own CubeSat\nThen for a bonus, in today's video, I interviewed two people helping students launch SilverSat into space (this weekend!), and a YouTuber who I've learned a lot from about track satellites (including CubeSats) from your own backyard!\nThe rest of this post contains a lightly-edited transcript of the video above.\nSo let's dive in.\nWhat's a CubeSat?\nWhat's a CubeSat? Well, it's in the name‚Äîit's a satellite that's a cube!\nBut they don't have to be a cube, these smallest ones are '1U', or 10 x 10 x 10 centimeters. You can also find 2U CubeSats, like the taller Build a CubeSat, which is 20 centimeters tall. (Well, technically the current prototype is 1.5U).\nSatGus, Mark Rober's satellite taking space selfies, is a whopping 12U! They needed all that extra space to fit a phone, a mechanism to deploy the phone, a camera to take the selfie, a Raspberry Pi to control the phone, and redundant systems for everything. They've already taken thousands of selfies, and SatGus has me beat. My best Pi might get to 3.4 Gigahertz, but the Pi on SatGus is whizzing through space at almost 17,000 miles per hour. That's 7,570 meters per second for everyone else in the world.\nBut back to CubeSats. Having standards means you can build off existing work for the hard things, like a space-rated Aluminum frame, or the complex EPS, or Electrical Power System board.\nThen you can add in custom parts, like a Pi to run experiments, a communications board with antennas and radios, cameras, sensors, and more!\nAnd these cubesats have normal screw-on antennas, but the way these things are deployed, you only get 10x10x10 centimeters‚Äîyou can't have an antenna poking out the top. So they use cool things like flexible tape antennas that pop out once your CubeSat deploys.\nWhat else makes CubeSats cool?\nWell, how about price? In the old days, you had to have like $10 million to build a satellite, and $60+ million to launch it into space.\nToday, you can build a space-ready CubeSat using a few thousand dollars of parts. Then you can launch it on a rideshare for... well, $85 grand. Which is a lot, but it's not $60 million-a-lot.\nSo most of us won't be launching one of these things into space, unless maybe you can get a grant. But that doesn't mean they're not useful to us.\nWho builds CubeSats?\nLike with many projects, I love these things for the challenge, the way they break some of my assumptions, like working with Raspberry Pis.\nIf you're building a device that's less than 2 kilograms, has 1.8W of maximum continuous power draw, and needs to be operated remotely‚Äîeven for just a month‚Äîyou're immediately going to change your assumptions about how you build things.\nI would hack Home Assistant onto a mini PC to monitor some sensors if I was feeling lazy‚Äîbut that Mini PC would use an order of magnitude too much power for a CubeSat (much less the internal volume it would occupy).\nOn CubeSats, every millimeter, and every milliAmp has to be accounted for.\nSo to me, CubeSats are like Swiss watches of modern electronics. How many sensors can you fit in one? How much throughput can you get on a tiny radio with a small antenna? Can you get enough power out of tiny solar cells to keep the main flight computer working? How do you control thermals without air? How do you design it so it can recover from a complete power loss?\nEvery step of the way there are challenges; and that's before we even launch one! Someone who I think illustrates this best is Manuel, with his Build a CubeSat project. He's working on this Cubesat:\nHe did a weather balloon launch this year, and he's documenting everything on YouTube.\nHis first launch had many small problems. But also great learning, especially around redundancy and how to get the thing off the launch stand without problems.\nAnd you're not only dealing with hardware, but also with software. And software that, at its core, has to be remotely accessed. And not only remote, but also wireless, meaning anyone else on earth within range can access it too.\nSo how do you keep it secure? That's something Tim from Ethos Labs is also dealing with with this, his T.E.M.P.E.S.T. CubeSat:\nThis thing is actually made to be not secure. It has intentional vulnerabilities, and he uses those to teach people different ways to make their CubeSats more secure.\nYou have complex hardware, running in limited space, with limited power and communications, and you want cram in as much functionality as possible.\nDo you see where I'm going with this? That kind of problem is perfect for the microcontrollers and low-power SBCs that I love testing and playing with every day.\nExcept instead of me worrying about something consuming 10 watts, these guys are looking at a power budget of one watt. Or less!\nThese problems are hard. And not everyone has the patience for a completely custom project like Build a CubeSat, so there are also some small companies building kits to help you learn all these lessons with a little less stress.\nLike what hardware do you need for a 100% self-contained CubeSat? And how do you get it certified for flight on a SpaceX rocket?\nYour own CubeSat\nWell, I'll quickly cover two products that are meant for like STEM classroom education, one from the lower end, and one that's based on a CubeSat that just flew this summer.\nThe first one is the MySat Kit, that you can buy from MySat in Ukraine. It comes with a board powered by an ESP32 with a camera, light sensors, an LED, gyroscope, accelerometer, barometer, clock, and a few other boards. And these are all off-the-shelf components you can buy replacements for or use 'em with other hardware, like a Raspberry Pi.\nThe way it's put together won't hold up on a rocket launch, but it's not meant for that. It's meant to show you how it's built, how you can communicate with it, and that sort of thing.\nIt took like an hour to build, and once I put it together I tried flashing the flight control firmware with my Mac... but I ran into some issues with Arduino IDE, and that's a me problem and not so much a MySat problem. Plus the team behind it has a whole war going on that they've been dealing with, so I'll be patient and try getting it going later.\nThe MySat goes from like $130 for a basic kit where you 3D print your own frame, or up to $300 for a full kit including deployable solar panels.\nOn the higher end, there's RASCube, and Edward Robinson, the 21 year old founder of Robinson Space, sent it over after he saw me posting about CubeSats online.\nThe RASCube comes from Australia, and Edward's mission is to teach students about space through hands-on building.\nI just built this LS version of the cube last week; it's the little brother to their V2 design, which flew in space on a Falcon 9 rocket earlier this year.\nLike MySat, you build the kit with an EPS board for power, a computer board with all the controls, and a radio board that ties in GPS and radio comms.\nThe RASCubes are a bit more expensive, coming in at around $430 each for the LB, and $600 each for the full aluminum V2s. But the price tag on that also covers full lesson plans and resources for teachers.\nI love these things‚Äîall the people I've talked to on this journey are motivated by the same thing: learning about space, electronics, and integrating hardware in a new way, and sharing what they learn with others, especially students.\nCubeSat T.E.M.P.E.S.T. and Build a CubeSat\nLike take Build a Cubesat. For that project, everything is open source hardware, and every part of the journey is being documented on YouTube.\nOne thing I learned from the first flight test was how weird it is to have your Pi go from like overheating on the ground, to getting really cold as it goes higher, but then overheating again in the upper atmosphere because there's not enough air to dissipate heat!\nYou start to realize some of the crazy physical conditions you'll deal with on orbit.\nBack down to earth, though, for CubeSat Tempest: the whole reason this exists is to help people learn why security is important, even for a tiny CubeSat. More importantly, Tim Fowler's course teaches people how to secure things like uplinks (see: the ground station pictured above) and flight control systems.\nThere are so many people like Tim, who work in their free time to try to teach about space, or engineering, or just small slices of things like security, using these tactile little cubes you can build and put next to your laptop on a desk.\nIt's crazy to think we're to a point where students can build these things, write flight control software, and even launch 'em into space!\nAnd that brings me to SilverSat.\nSilverSat\nThere's another CubeSat with a Raspberry Pi onboard, and it's launching NET Sunday, at 6:11 p.m. Eastern time, aboard a Falcon 9 rocket. What does NET mean? Well, as I found out when I visited Florida this summer, that means \"No Earlier Than\", and in spaceflight, many things delay launches.\nThe students who built SilverSat are no strangers to delays‚Äîthey were originally supposed to see their CubeSat launch earlier this year, but the cargo module they were on got damaged during transport, and that delayed them for months.\nI got to talk to two of the adults guiding the students on their first space launch, and I discussed the history of the project (it started up in 2017), how they are supported by NASA's CubeSat Launch Initiative, the importance of amateur radio for CubeSats, and why they chose a Raspberry Pi Zero for their onboard computer.\nThat interview is tucked away in the last half of the video at the top of this post.\nTracking Satellites from your backyard\nAlso in that video, I spoke to Gabe from saveitforparts, and he mentioned it's not that difficult to listen in on satellites on orbit‚Äîincluding amateur CubeSats!\nSilverSat will be broadcasting SSDV (Slow-Scan Digital Video) at set times, and the schedule for that should be posted on their website.\nCheck out the video embedded in this post (near the top), or Gabe's own channel for ideas for tracking satellites. It can be done with under $100 of equipment (usually just an SDR and a cheap antenna).\nInfectious Enthusiasm for Learning (and Teaching)\nI feel like a broken record, but one thing I love, talking to anyone in the CubeSat community is this sense of infectious enthusiasm. And I was going to cut this video out for time, but watching it back, I realized other people would probably enjoy Tim showing off some neat CubeSats in his personal collection as much as I did. So I put up some bonus content on my second channel, Level 2 Jeff; you can watch another 8 minutes of CubeSat hardware below:\nThank you to everyone who taught me about CubeSats for this video and blog post.\nFurther reading\nI took down Starlink (but I haven't cancelled)\nStarlink's current problem is capacity\nGetting my amateur radio (ham) license\ncubesat\nspace\nraspberry pi\nvideo\nyoutube\nmicrocontroller\nsatellite\nAdd new comment\nComments\n–∞ –ø—Ä–∏—á—ë–º —Ç—É—Ç —É–∫—Ä–∞–∏–Ω–∞?\nReply\nThe MySat is a project that is built by a small group in Ukraine.\nReply",
      "author": null,
      "published_date": null,
      "meta_description": null,
      "word_count": 2056,
      "scraping_method": "beautifulsoup"
    },
    {
      "url": "https://herman.bearblog.dev/slow-social-media/",
      "title": "Slow Social Media",
      "content": "Slow social media\n16 Sep, 2025\nPeople often assume that I hate social media. And they'd be forgiven for believing that, since I am overtly critical of current social media platforms and the effects they have on individuals and society; and deleted all of my social media accounts back in 2019.\nHowever, the underlying concept of social media is something I resonate with: Stay connected with the people you care about.\nIt's just that the current form of social media is bastardised, and not social at all. Instead of improving relationships and fostering connection, they're advertisement-funded content mills which are explicitly designed and continually refined to keep you engaged, lonely, and unhappy. And once TikTok figured out that short-form video with a recommendation engine is digital crack, all other social media platforms quickly sprang into action to copy their secret sauce.\nMeta basically turned Instagram and Facebook from 'connecting with friends' into 'doom-scrolling random content'. Even Pinterest is starting to look like TikTok! They followed user engagement, but not the underlying preferences of their users. I posit that any for-profit social media will eventually degrade into recommendation media over time.\nI don't think most people using these platforms understand that they are the product. Instagram isn't built for you. It's built for marketers. It's built for celebrities to capitalise on their audiences. It's built for politicians and their cronies to sway sentiment. It's built to be as addictive as possible, and to capitalise on your insecurity and uncomfortability.\nImagine that, society and politics are on the rocks all so a fitness influencer can sell you their \"Abs in 30 days\" training program.\nThese platforms are the quintessential poster child for late-stage capitalism.\nOkay, now that we've established what the problems with current platforms are‚Äîwhat would a non-evil social media platform look like?\nI'd love to see everyone running a blog, and subscribing to the people they care about via RSS. But unfortunately this doesn't scale since it requires effort to put your thoughts down in writing longer than 255 characters. I have many friends who don't even know I have a blog, or what an RSS reader is.\nSo while everyone blogging may be the ideal we can aspire to, let's design a hypothetical social media platform that takes the good aspects of current social media, while creating pro-social incentives.\nThe platform should be about:\nKeeping up with friends, family, and other acquaintances\nConnection (but, you know, real connection)\nImproving relationships\nThoughtful engagement\nThe platform should NOT be about:\nCollecting followers\nSelf-promotion\nAdvertising and marketing\nShort-form video and media entertainment\nIn my opinion, as soon as there is the ability for commercial interests to take hold, they will. The \"follow\" mechanism is a key part of that. I propose that instead of followers we should regress back to the \"friend\" or \"connection\" system where there is a symmetric relationship where both people have to agree to the connection. There is no good reason to have \"followers\" on a platform that is trying to improve relationships. \"Following\" is purely for egotistical or financial gain and breeds parasocial relationships.\nI think there should also be a reasonable cap on the number of connections that can be made. Something like 300 friends sounds right. Any more than that and you're a collector, and not using the platform to foster connection.\nThis feature alone already removes 90% of the marketing interests in the platform. Do you want to make a connection, but are maxed out? You'll need to unfriend someone first.\nThe second necessary element would be a chronological feed with posts from your connections. This turns the platform from an engagement engine into a way to keep up with what everyone else is doing, but importantly, gives you a natural \"end\" to the feed when you start seeing posts you've already viewed. This way when you start scrolling there's an explicit stopping point.\nRelatedly, pagination is more humane than infinite-scroll since it gives users a natural breathing point where they can decide whether they want to keep going. Infinite-scroll is such an obvious user-trap, and I view any website doing it as not having its user's best interests at heart.\nAnd finally, there should be a reasonable cap on the number of times a user can post per day. Roughly 5 times per day feels like the upper threshold of what you can post while being intentional about what it is you're posting. This will keep the feed reasonably populated without one or two people completely overwhelming it.\nThe rest of the platform can be optimised to be as easy-to-use as possible. Something like a mixture between the old Instagram and Twitter, with comments and reactions. No reels or any other recommendation system to keep people engaged to death. And no analytics, since that would be optimising for reach and engagement instead of the stated goal of connection.\nDo I expect a platform like this to succeed? Not by the traditional metrics of success. In the real world it would exist alongside the content mills, which are exciting by design and competing for attention. Could it work in niche groups, or amongst intentional people who are sick of the current platforms? Maybe.\nNaturally, a project like this would have to be funded somehow, and unfortunately very few people are willing to pay $5 per month for software services, even if they use it every day. However, I suspect that a social media platform like this would be manageable enough that a small team could run it fairly cheaply and profitably if they're creative. Perhaps with nothing but donations.\nWho will create this egalitarian social media? Not me, that's for sure. I already have my fair share of work moderating the Bear discovery feed, to the extent I've had to bring on a second moderator (hello Sheena!) to keep it clean of spam and other nasty things that free services on the internet attract.\nThat being said, I would love to see something like this. I'd love to be able to stay connected with friends and family abroad without having my attention sold to the highest bidder.\nIf anyone is working on something like this, I'd be happy to consult.",
      "author": null,
      "published_date": null,
      "meta_description": "How can we design better platforms?",
      "word_count": 1036,
      "scraping_method": "beautifulsoup"
    },
    {
      "url": "https://www.stepsecurity.io/blog/ctrl-tinycolor-and-40-npm-packages-compromised",
      "title": "Shai-Hulud malware attack: Tinycolor and over 40 NPM packages compromised",
      "content": "The NPM ecosystem is facing another critical supply chain attack. The popular @ctrl/tinycolor package, which receives over 2 million weekly downloads, has been compromised along with more than 40 other packages across multiple maintainers. This attack demonstrates a concerning evolution in supply chain threats - the malware includes a self-propagating mechanism that automatically infects downstream packages, creating a cascading compromise across the ecosystem. The compromised versions have been removed from npm.\n\nIn this post, we'll dive deep into the payload's mechanics, including deobfuscated code snippets, API call traces, and diagrams to illustrate the attack chain. Our analysis reveals a Webpack-bundled script (bundle.js) that leverages Node.js modules for reconnaissance, harvesting, and propagation; targeting Linux/macOS devs with access to NPM/GitHub/cloud creds.\n\nTo help the community respond to this incident, StepSecurity hosted a Community Office Hour on September 16th at 1 PM PT. The recording is available here: https://www.youtube.com/watch?v=D9jXoT1rtaQ\n\nThe attack unfolds through a sophisticated multi-stage chain that leverages Node.js's process.env for opportunistic credential access and employs Webpack-bundled modules for modularity. At the core of this attack is a ~3.6MB minified bundle.js file, which executes asynchronously during npm install. This execution is likely triggered via a hijacked postinstall script embedded in the compromised package.json.\n\nThe malware includes a self-propagation mechanism through the NpmModule.updatePackage function. This function queries the NPM registry API to fetch up to 20 packages owned by the maintainer, then force-publishes patches to these packages. This creates a cascading compromise effect, recursively injecting the malicious bundle into dependent ecosystems across the NPM registry.\n\nThe malware repurposes open-source tools like TruffleHog to scan the filesystem for high-entropy secrets. It searches for patterns such as AWS keys using regular expressions like AKIA[0-9A-Z]{16}. Additionally, the malware dumps the entire process.env, capturing transient tokens such as GITHUB_TOKEN and AWS_ACCESS_KEY_ID.\n\nFor cloud-specific operations, the malware enumerates AWS Secrets Manager using SDK pagination and accesses Google Cloud Platform secrets via the @google-cloud/secret-manager API. The malware specifically targets the following credentials:\n\nThe malware establishes persistence by injecting a GitHub Actions workflow file (.github/workflows/shai-hulud-workflow.yml) via a base64-encoded bash script. This workflow triggers on push events and exfiltrates repository secrets using the expression ${{ toJSON(secrets) }} to a command and control endpoint. The malware creates branches by force-merging from the default branch (refs/heads/shai-hulud) using GitHub's /git/refs endpoint.\n\nThe malware aggregates harvested credentials into a JSON payload, which is pretty-printed for readability. It then uploads this data to a new public repository named via the GitHub /user/repos API.\n\nThe entire attack design assumes Linux or macOS execution environments, checking for os.platform() === 'linux' || 'darwin'. It deliberately skips Windows systems. For a visual breakdown, see the attack flow diagram below:\n\nThe compromise begins with a sophisticated minified JavaScript bundle injected into affected packages like @ctrl/tinycolor. This is not rudimentary malware but rather a sophisticated modular engine that uses Webpack chunks to organize OS utilities, cloud SDKs, and API wrappers.\n\nThe payload imports six core modules, each serving a specific function in the attack chain.\n\nThis module calls getSystemInfo() to build a comprehensive system profile containing platform, architecture, platformRaw, and archRaw information. It dumps the entire process.env, capturing sensitive environment variables including AWS_ACCESS_KEY_ID, GITHUB_TOKEN, and other credentials that may be present in the environment.\n\nThe AWS harvesting module validates credentials using the STS AssumeRoleWithWebIdentityCommand. It then enumerates secrets using the @aws-sdk/client-secrets-manager library.\n\nThe module handles errors such as DecryptionFailure or ResourceNotFoundException silently through decorateServiceException wrappers. It targets all AWS regions via endpoint resolution.\n\nThe GCP module uses @google-cloud/secret-manager to list secrets matching the pattern projects//secrets/. It implements pagination using nextPageToken and returns objects containing the secret name and decoded payload. The module fails silently on PERMISSION_DENIED errors without alerting the user.\n\nThis module spawns TruffleHog via child_process.exec('trufflehog filesystem / --json') to scan the entire filesystem. It parses the output for high-entropy matches, such as AWS keys found in ~/.aws/credentials.\n\nThe NPM propagation module parses NPM_TOKEN from either ~/.npmrc or environment variables. After validating the token via the /whoami endpoint, it queries /v1/search?text=maintainer:${username}&size=20 to retrieve packages owned by the maintainer.\n\nThis creates a cascading effect where an infected package leads to compromised maintainer credentials, which in turn infects all other packages maintained by that user.\n\nThe GitHub backdoor module authenticates via the /user endpoint, requiring repo and workflow scopes. After listing organizations, it injects malicious code via a bash script (Module 941).\n\nHere is the line-by-line bash script deconstruction:\n\nThis workflow is executed as soon as the compromised package create a commit with it, which immediately exfiltrates all the secrets.\n\nThe malware builds a comprehensive JSON payload containing system information, environment variables, and data from all modules. It then creates a public repository via the GitHub /repos POST endpoint using the function . The repository is public by default to ensure easy access for the command and control infrastructure.\n\nWe are observing hundreds of such public repositories containing exfiltrated credentials. A GitHub search for \"Shai-Hulud\" repositories reveals the ongoing and widespread nature of this attack, with new repositories being created as more systems execute the compromised packages.\n\nThis exfiltration technique is similar to the Nx supply chain attack we analyzed previously, where attackers also used public GitHub repositories to exfiltrate stolen credentials. This pattern of using GitHub as an exfiltration endpoint appears to be a preferred method for supply chain attackers, as it blends in with normal developer activity and bypasses many traditional security controls.\n\nThese repositories contain sensitive information. The public nature of these repositories means that any attacker can access and potentially misuse these credentials, creating a secondary risk beyond the initial compromise.\n\nThe attack employs several evasion techniques including silent error handling (swallowed via catch {} blocks), no logging output, and disguising TruffleHog execution as a legitimate \"security scan.\"\n\nWe analyzed the malicious payload using StepSecurity Harden-Runner in a GitHub Actions workflow. Harden-Runner successfully flagged the suspicious behavior as anomalous. The public insights from this test reveal how the payload works:\n‚Ä¢ The compromised package made unauthorized API calls to during the npm install process\n‚Ä¢ These API interactions were flagged as anomalous since legitimate package installations should not be making such external API calls\n\nThese runtime detections confirm the sophisticated nature of the attack, with the malware attempting credential harvesting, self-propagation to other packages, and data exfiltration - all during what appears to be a routine package installation.\n\nThe following indicators can help identify systems affected by this attack:\n\nUse these GitHub search queries to identify potentially compromised repositories across your organization:\n\nReplace with your GitHub organization name and use the following GitHub search query to discover all instance of in your GitHub environment.\n\nTo find malicious branches, you can use the following Bash script:\n‚Ä¢ The malicious bundle.js file has a SHA-256 hash of:\n\nThe following packages have been confirmed as compromised:\n\nIf you use any of the affected packages, take these actions immediately:\n\nThe malware harvests credentials from multiple sources. Rotate ALL of the following:\n‚Ä¢ Any credentials stored in AWS Secrets Manager or GCP Secret Manager\n\nSince the malware specifically targets AWS Secrets Manager and GCP Secret Manager, you need to audit your cloud infrastructure for unauthorized access. The malware uses API calls to enumerate and exfiltrate secrets, so reviewing audit logs is critical to understanding the scope of compromise.\n\nStart by examining your CloudTrail logs for any suspicious secret access patterns. Look specifically for BatchGetSecretValue, ListSecrets, and GetSecretValue API calls that occurred during the time window when the compromised package may have been installed. Also generate and review IAM credential reports to identify any unusual authentication patterns or newly created access keys.\n\nFor Google Cloud Platform, review your audit logs for any access to the Secret Manager service. The malware uses the @google-cloud/secret-manager library to enumerate secrets, so look for unusual patterns of secret access. Additionally, check for any unauthorized service account key creation, as these could be used for persistent access.\n‚Ä¢ Check deploy keys and repository secrets for all projects\n‚Ä¢ Set up alerts for any new npm publishes from your organization\n\nThe following steps are applicable only for StepSecurity enterprise customers. If you are not an existing enterprise customer, you can start our 14 day free trial by installing the StepSecurity GitHub App to complete the following recovery step.\n\nThe NPM Cooldown check automatically fails a pull request if it introduces an npm package version that was released within the organization‚Äôs configured cooldown period (default: 2 days). Once the cooldown period has passed, the check will clear automatically with no action required. The rationale is simple - most supply chain attacks are detected within the first 24 hours of a malicious package release, and the projects that get compromised are often the ones that rushed to adopt the version immediately. By introducing a short waiting period before allowing new dependencies, teams can reduce their exposure to fresh attacks while still keeping their dependencies up to date.\n\n\n\nHere is an example showing how this check protected a project from using the compromised versions of packages involved in this incident:\n\nWe have added a new control specifically to detect pull requests that upgraded to these compromised packages. You can find the new control on the StepSecurity dashboard.\n\nUse StepSecurity Harden-Runner to detect compromised dependencies in CI/CD\n\nStepSecurity Harden-Runner adds runtime security monitoring to your GitHub Actions workflows, providing visibility into network calls, file system changes, and process executions during CI/CD runs. Harden-Runner detects the compromised nx packages when they are used in CI/CD. Here is a sample Harden-Runner insights page demonstrating this detection:\n\nIf you're already using Harden-Runner, we strongly recommend you review recent anomaly detections in your Harden-Runner dashboard. You can get started with Harden-Runner by following the guide at https://docs.stepsecurity.io/harden-runner.\n\nThe StepSecurity Threat Center provides comprehensive details about this @ctrl/tinycolor compromise and all 40+ affected packages. Access the Threat Center through your dashboard to view IOCs, remediation guidance, and real-time updates as new compromised packages are discovered. Threat alerts are automatically delivered to your SIEM via AWS S3 and webhook integrations, enabling immediate incident response when supply chain attacks occur. Our detection systems identified this attack within minutes of publication, providing early warning before widespread exploitation.\n\nUse StepSecurity Artifact Monitor to detect software releases outside of authorized pipelines\n\nStepSecurity Artifact Monitor provides real-time detection of unauthorized package releases by continuously monitoring your artifacts across package registries. This tool would have flagged this incident by detecting that the compromised versions were published outside of the project's authorized CI/CD pipeline. The monitor tracks release patterns, verifies provenance, and alerts teams when packages are published through unusual channels or from unexpected locations. By implementing Artifact Monitor, organizations can catch supply chain compromises within minutes rather than hours or days, significantly reducing the window of exposure to malicious packages.\n\nLearn more about implementing Artifact Monitor in your security workflow at https://docs.stepsecurity.io/artifact-monitor.\n‚Ä¢ The npm security team and package maintainers for their swift response to this incident.\n‚Ä¢ @franky47, who promptly notified the community through a GitHub issue\n\nThe collaborative efforts of security researchers, maintainers, and community members continue to be essential in defending against supply chain attacks.",
      "author": null,
      "published_date": null,
      "meta_description": "The popular @ctrl/tinycolor package with over 2 million weekly downloads has been compromised alongside 40+ other NPM packages in a sophisticated supply chain attack dubbed \"Shai-Hulud\". The malware self-propagates across maintainer packages, harvests AWS/GCP/Azure credentials using TruffleHog, and establishes persistence through GitHub Actions backdoors - representing a major escalation in NPM ecosystem threats.",
      "word_count": 1841,
      "scraping_method": "goose3"
    }
  ],
  "audio_files": [],
  "stats": {
    "stories_fetched": 10,
    "articles_scraped": 8,
    "total_words": 14802,
    "audio_files_generated": 0
  }
}